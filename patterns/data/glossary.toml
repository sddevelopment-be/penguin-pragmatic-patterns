[[terminology]]
name = "Application Program Interface"
abbreviation = "API"
domain = "software"
description = """
    Specifies a set of software functions that are made available to an application programmer.
    The API typically includes function names, the parameters that can be passed into each functions, and a
    description of the return values one can expect.
    """
aliases = []
references = [
    { title = "IBM: What is an API?", link = "https://www.ibm.com/topics/api" }
]

[[terminology]]
name = "Asymmetric clustering"
domain = "software"
description = """
        One machine is in hot-standby mode and does nothing by monitor the other.
        In case of failure, the hot-standby takes over.
    """
aliases = ["failover configuration"]
references = []

[[terminology]]
name = "Asymmetric multiprocessing"
domain = "software"
description = """
    Each processor is assigned to a single task.
    One processor is called the _master (or main) processor_, and controls the system.
    """
aliases = []
references = []

[[terminology]]
name = "Asynchronous cancellation"
domain = "software"
description = """
    Cancellation of a target thread that immediatly terminates it.
    (e.g. Unix' `kill -9 $PID` command )
    """
aliases = []
references = []

[[terminology]]
name = "Blade servers"
domain = "hardware"
description = """
        A single chassis with multiple processor boards, I/O boards, and networking boards.
        Each processor board boots independently and runs its own operating system.
        """
aliases = []
references = []

[[terminology]]
name = "Bootstrap program"
domain = "software"
description = """
        An initial program, usually stored on ROM or EEPROM memory, to initiallize all aspects of the system.
        """
aliases = ["boot loader"]
references = []

[[terminology]]
name = "Bounded buffer"
domain = "software"
description = """
    A type of buffer uses with shared memory IPC. Bounded buffers can only use a fixed amount of memory space.
    """
aliases = []
references = []

[[terminology]]
name = "Boyscout rule"
domain = "software"
description = """
    The base premise of the Boyscout rule is that if everyone leaves their environment a little bit better than it was when they found it, eventually it
    wil flourish. The term originates from the handbook of the Boyscouts of America, where it was phrased slightly differently to apply mostly to campsites.
    In software development, the phrase is commonly used to entice programmers to clean up their own messes and the messes that were left behind by
    their predecessors. This relates strongly to the broken window theory.
    """
aliases = []
references = []

[[terminology]]
name = "Broken window theory"
domain = "software"
description = """
    A theory originating from the domain of criminology. The idea being that if an environment is
    already decayed, people have less ethical problems with making it worse. In the original criminological experiment from the 1990s, researchers measured how long it took for a building to be completely vandalized after
    breaking a single window. Psychologist believe that outward signs of neglect make us feel that no one cares about the object in question, hence we
    are not likely to care for it either.
    """
aliases = []
references = [
    { title = "wikipedia article", link = "https://en.wikipedia.org/wiki/Broken_windows_theory" }
]

[[terminology]]
name = "Caching"
domain = "software"
description = """
    The storing of information on a faster, smaller storage system than the main memory bank where the data originates from.
Cache management is highly important due to the limited size of of the faster storage medium. There are different levels
of cache-memory, indicating the memory's proximity to the CPU (lower == closer). As the distance to the CPU increases, so does the available memory space of the cache.
    """
aliases = []
references = []

[[terminology]]
name = "Cascading termination"
domain = "software"
description = """
    Some systems terminate all of the child processes when they terminate the parent process. This is called 'cascading termination'.
    """
aliases = []
references = []

[[terminology]]
name = "Command Line Interface."
abbreviation = "CLI"
domain = "software"
description = """
    A textual user interface, allowing for system interaction soley through text-based instructions and feedback.
    """
aliases = ["terminal", "shell"]
references = []

